{"meta":{"title":"小鱼君的博客","subtitle":"Dragon Fish's Blog","description":"A GitHub Blog by Dragon Fish","author":"机智的小鱼君","url":"https://dragon-fish.github.io","root":"/"},"pages":[{"title":"404 - 页面不存在","date":"2020-04-18T20:33:27.000Z","updated":"2020-08-06T23:04:59.676Z","comments":true,"path":"404.html","permalink":"https://dragon-fish.github.io/404.html","excerpt":"","text":"啊咧，啊咧咧？ 这个页面找不到了，就像装在游戏机盒子里的作业一样没有人喜欢！ &lt; 回到主页 .bread-crumb-container {display:none;}"},{"title":"机智的小鱼君","date":"2020-08-06T23:04:59.692Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"author/index.html","permalink":"https://dragon-fish.github.io/author/","excerpt":"","text":"机智的小鱼君(英文昵称：Dragon Fish)，是本站站长的人设。 也就是说机智的小鱼君是一个以站长本人为形象创造出来的虚拟人物，虽然一部分和真实的情况一致，但有大部分设定是虚构的。 简介 机智的小鱼君是一位生活在中国的高校学生 私底下却是 外貌整体来说是一个很普通的男孩 黑色的齐耳短发，刘海刚好到眉梢，特点是头顶闪电状 ⚡️ 的呆毛 似乎是认为头发过长很不方便打理，所以一旦头发长度超过 16 厘米就会去理发 瞳色为淡蓝色，带着一副看似普通的黑框眼镜，其实是新一代 AR 眼镜 着装常为连体口袋带帽子的卫衣配宽松的运动裤，另外一定会有的搭配服装是一件花纹十分有“名族特色”的背心，其实本身并不是名族特色服饰 爱好 十分喜欢日本 ACGN 文化 最喜欢的轻小说是《No Game No Life 游戏人生》 喜欢的动画有：游戏人生、Steins;Gate、寒蝉鸣泣之时 喜欢的漫画有：哆啦 A 梦 *平时自己也会画一些小漫画，虽然曾经经常是用笔和纸画，但现在大多数情况下使用 iPad 板绘，因为相比随身带着铅笔和素描本 喜欢打游戏 目前最喜欢的电脑游戏是《最终幻想 14》 经常会玩的电脑游戏有：Minecraft、镜之边缘 目前最喜欢的手机游戏是《我在 7 年后等着你》 经常会玩的手机游戏有：雷亚旗下的音游(Deemo、Cytus、VOEZ)、QQ 飞车手游和跑跑卡丁车手游(因为太肝了基本弃坑)、One Epic Knight(一款很老但很好玩的跑酷游戏) 口癖 结尾超喜欢加语气词In My Opinion，有时候也会用中文，例如我觉得大概吧 重度中二病患者,如果他在你面前突然喊出技能名，请装作被击中一般痛苦万分，以示尊敬 能力生活 一口气吃完大碗热干面加卤鸡蛋加卤香干后再吃下一个炸面窝喝下一杯热豆腐脑的能力（？ 骑自行车双手离把 100 米不倒地的能力*危险，勿模仿 写出中二小说结果没多久就弃坑的能力 用 iPad 进行低等级板绘的能力，为自己的小说创造人设 技术 语言 使用 HTML + CSS + JavaScript 进行中等级操作的能力 网站部署 部署 MediaWiki 网站的能力 白嫖 GitHub 服务器部署自动更新的 Hexo 静态博客网站的能力 数据库 用 PHPMyAdmin 在 SQL 数据库里乱点的能力 使用 MongoDB 进行基础操作的能力"},{"title":"","date":"2020-08-06T23:04:59.692Z","updated":"2020-08-06T23:04:59.692Z","comments":false,"path":"categories/index.html","permalink":"https://dragon-fish.github.io/categories/","excerpt":"","text":""},{"title":"InPageEdit-v2","date":"2020-04-20T08:14:20.000Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"inpageedit-v2/index.html","permalink":"https://dragon-fish.github.io/inpageedit-v2/","excerpt":"","text":"由机智的小鱼君开发，面向 MediaWiki 熟练用户的多功能 JavaScript 插件。 BEAUTIFUL DESIGN 丝滑且顺畅 全新升级的动态效果，如丝般顺滑 配以 Material Design 色彩以及 FontAwesome 给您全新编辑体验，编辑从未如此愉快。 POWERFUL FUNCTIONS 小巧而强大 ::IPE::，一款多功能 MediaWiki 插件，不仅仅是编辑。 快速比对页面差异、快速重定向、快速移动页面…… 汇聚大量常用功能，辅以强大的 API，让你无需再打开一堆标签页。 更多内容 使用帮助什么是 ::IPE::？如何安装以及使用？目前的服务状态如何？ 阅读更多…… 更新日志最新版本的 ::IPE:: 资讯，尽在更新日志。 阅读更多…… 统计信息想知道关于 ::IPE:: 的使用数据吗？想知道你参与的 wiki 排第几名吗？ 阅读更多……"},{"title":"","date":"2020-08-06T23:04:59.692Z","updated":"2020-08-06T23:04:59.692Z","comments":false,"path":"tags/index.html","permalink":"https://dragon-fish.github.io/tags/","excerpt":"","text":""},{"title":"关于InPageEdit-v2","date":"2020-04-22T12:14:20.000Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"inpageedit-v2/about/index.html","permalink":"https://dragon-fish.github.io/inpageedit-v2/about/","excerpt":"","text":"顶头文字 简介A @media screen and (max-width:768px) { .column-3 > *, .column-2 > * { width: 100% !important; } } @media screen and (min-width:768px) { .grid { display: grid; grid-template-areas: \"a a a\" \"b b d\" \"c c d\"; grid-template-columns: 1fr 1fr 1fr; } }"},{"title":"InPageEdit统计信息","date":"2020-08-06T23:04:59.692Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"inpageedit-v2/analysis/index.html","permalink":"https://dragon-fish.github.io/inpageedit-v2/analysis/","excerpt":"","text":"-次 ::IPE::累计使用次数 来自-个站点的-名用户选择使用::IPE::，今日已被使用-次 使用趋势 站点统计 站点名称 使用次数 使用人数 InPageEdit Analysis 统计系统由 PHP + MongoDB 驱动，数据可视化由 ECharts 驱动。 所有数据均为真实数据 $(function(){ if (urlParam('sitename') || urlParam('siteurl')) { $.getScript('sitedata.js'); } else { $.getScript('main.js'); } });"},{"title":"InPageEdit统计信息","date":"2020-08-06T23:04:59.692Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"inpageedit-v2/analysis/v2.html","permalink":"https://dragon-fish.github.io/inpageedit-v2/analysis/v2.html","excerpt":"","text":"到目前为止，来自-个站点的用户总计使用了-次InPageEdit-v2，今日已被使用-次 这里展示的是插件 InPageEdit 的使用信息，所有数据均为真实数据 统计系统设计之初，不同类别的信息接口开放的时间有差异，因此某些数据在不同数据表上的数据可能会有差异。 另外不得不提及的是，InPageEdit 的统计接口未做加密处理，也许会出现人为刷数据的情况，甚至出现极端的洗版现象，但作者本人不会捏造数据。统计数据的目的不是为了炫耀使用量或者让大家竞争排名，只是为了从数据层面给插件开发作指导。 @card{ 每日统计每日 InPageEdit 使用量趋势，保存编辑、快速重定向、移动页面等有效操作会被计入使用次数。 } @card{ 站点统计使用 InPageEdit 快速编辑功能的用户的 wiki，以及各个 wiki 进行保存编辑操作的次数。 特别说明：程序区分各个 wiki 的键为 wgSiteName，若有同名 wiki，那么该 wiki 的数据可能不准确(若多个同名 wiki 均有用户使用本插件，这些 wiki 的数据会被计入同一张数据表) ID wiki名称 编辑提交次数 } @card{ 功能统计IPE 各个功能的使用统计。 快速编辑提交率 ID 功能 使用次数 } 通告@card{ 2020 年 3 月 6 日 02:08 由于网站 ssl 证书于 2020 年 3 月 3 日过期，当天小鱼君未及时更换新的证书，导致 https 网络协议失效，2020 年 3 月 3 日-3 月 5 日的统计数据低于实际数据。 }"},{"title":"InPageEdit 异常状态记录","date":"2020-08-06T23:04:59.692Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"inpageedit-v2/status/index.html","permalink":"https://dragon-fish.github.io/inpageedit-v2/status/","excerpt":"","text":"::TOC:: ::level-1:: InPageEdit 主程序异常 问题概要 出现时间：2020 年 7 月 7 日 GMT+8 下午 2:20 相关工单：[[issues#76]]、[[issues#77]] 事件类型：故障 → 主程序 是否解决：::review:: 处理进度 2020 年 7 月 7 日 14:20 用户反馈 IPE 无法运行 2020 年 7 月 10 日 4:00 已提交 [[commit#ec1c3b69c91b2be323cd3f6ec9bcff104544acd4]]，故障跟进中 ::level-4:: ::done:: 数天 InPageEdit Analysis 记录异常 问题概要 出现时间：2020 年 7 月 4 日 相关修改：[[commit#2216d849117477be6fcb80c9565b343223cf8d59]] 事件类型：故障 → Wjghj Server → Analysis 服务 是否解决：::done:: 处理进度 2020 年 7 月 4 日 Wjghj Project 数据库服务出现异常 2020 年 7 月 7 日 00:11:38 已修复"},{"title":"InPageEdit更新日志","date":"2020-04-22T12:48:37.000Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"inpageedit-v2/update-logs/index.html","permalink":"https://dragon-fish.github.io/inpageedit-v2/update-logs/","excerpt":"","text":"提示：某些版本更新更新会导致翻译字符串丢失，请在 URL 后添加i18n=nocache刷新翻译缓存。Notice: Sometimes the update will cause the translation to be lost, please add i18n=nocache after the URL to update the translation cache. ::TOC:: Foresight 14.0.0 预计发布日期: 2020 年 9 月中旬 破坏性变更 警告：此版本可能包含破坏性变更。 新版本前瞻 本段落的内容是未来可能进行的更新，但不保证提到的所有功能与特性均会实装，可能产生的变化也不会尽数罗列于此，一切请以最终版本为准。 Breakchanges InPageEdit-v2 将重命名brand new为 InPageEdit 不会在此版本发布后的 3 个补丁内执行此变更 GitHub 仓库将进行重命名，将保留旧仓库到新仓库的重定向 将保证即便使用插件的个人或 wiki 不采取任何应对措施也不会影响正常使用 ::warning:: 从此版本开始将使用新的版本命名方式 &lt;主版本号&gt;.&lt;次版本号&gt;.&lt;补丁编号&gt; 主版本号 项目结构变更、新增重要功能 次版本号 现有功能优化、新增小部件 补丁编号 常规故障修复、代码语法优化 例如 2.13.4-6 → 13.4.6 旧版本将不会重新命名 ::new:: 快速巡查功能、快速回退功能 在用户反馈中这两个功能的需求呼声较高，因此会考虑优先实装 ::updated:: 快速编辑 → 编辑工具条考虑对MediaWiki:Edittools进行支持 ::updated:: 快速预览功能将会有全新的设计风格和实现逻辑，使页面预览更贴近最终效果 这种新的风格我愿称之为「沉浸式预览界面」 在预览编辑时，将替换文章中的内容，能够让使用者直观感受页面的最终效果 ::fixed:: 修复 GitHub issues 已罗列的众多问题 移动版皮肤导致的种种问题仍旧不会被优先考虑，因为它太烦人了 有关编辑提示在子页面的问题可能会在后续补丁中进行修复，因为它也太烦人了 恰饭 随着对 InPageEdit 维护的时间越来越久，逐渐发现这个过程很伤肝，为了给自己凑钱买一些生发水，可能会考虑开设打赏通道（SMJBWY） 2.13.4-6 (2.13.4 patch 6) 更新日期：2020 年 7 月 18 日 22:52:27 ::updated:: 针对 i18n 模块做了一些逻辑上的优化 当版本更新时将会自动刷新翻译缓存 您可以使用 url 参数i18n=nocache立即刷新翻译缓存 ::fixed:: 修复了一些翻译文本的错误 ::fixed:: 修复了 [[issues#80]] 2.13.4-5 (2.13.4 patch 5) 更新日期：2020 年 7 月 4 日 04:41:57 ::fixed:: 修复了快速编辑段落时快速差异出现的问题 [[issues#73]] ::fixed:: 修复了 ssi_modal 的钩子 ::updated:: 重命名内部模块msg→_msg ::updated:: 精简了部分 html 的结构 ::updated:: 对 InPageEdit.preference.modal 模块作了一些小调整 新增两条翻译字符串 preference-translate preference-discord 2.13.4-4 (2.13.4 patch 4) 更新日期：2020 年 7 月 1 日 03:40:58 常规改动 ::fixed:: 修正了 2.13.4-3 版本针对 Toolbox 的一些小优化中的逻辑问题 ::fixed:: 修正了 2.13.4-3 版本针对 [[issues#60]] 的改动所产生的问题 ::updated:: 更新了翻译文件的部分字符串 更正部分翻译 删除一些不再使用的字符串 模态框中按钮的文字将全部显示大写字母（主要针对西文） ::fixed:: 修复 [[issues#68]] ::fixed:: 修复 [[issues#67]] ::fixed:: 再一次修复 [[issues#60]] 技术性改动 ::updated:: 更新了内部模块 msg() 不再需要使用 replace()，直接传递第二个及之后的参数即可替代占位符，参数数量不限 1234567/** * @example &#123; \"message-name\": \"$1是$2他爸爸。\" &#125; *//** 旧代码 **/msg(\"message-name\").replace(\"$1\", \"大明\").replace(\"$2\", \"小明\"); // =&gt; 大明是小明他爸爸。/** 新代码 **/msg(\"message-name\", \"大明\", \"小明\"); // =&gt; 大明是小明他爸爸。 2.13.4-3 (2.13.4 patch 3) 更新日期：2020 年 6 月 18 日 03:43:46 ::info:: 一些技术性改动 class 属性变更：.editForm → .hideBeforeLoaded InPageEdit.preview模块优化 ::fixed:: 修复 [[issues#59]] 再次修复编辑冲突的问题 这意味着现在应该不会再出现你打开编辑器至你保存这段时间里其他用户做出的修改被覆盖掉的情况了 你知道吗：小鱼君在几个月前曾经尝试修复过一次这个故障，但是用于验证的时间戳填错了变量，本次补丁就是修复了这个变量（这个屑鱼就是逊啦） ::fixed:: 不刷新页面保存编辑后，关闭标签页时不会再阻止你离开 ::updated:: 针对 Toolbox 的一些小优化 如果锁定展开工具盒，下次加载网页时工具盒会自动展开 ::fixed:: 尝试完成了这个刻薄的要求 [[issues#60]] ::deleted:: 配置项InPageEdit.myPreference = { &quot;doNotShowLocalWarn&quot;: false }不再生效，现在采用新的提醒方式，不会再有烦人的确认弹窗 2.13.4-2 (2.13.4 patch 2) 更新日期：2020 年 6 月 14 日 02:31:24 ::fixed:: 修复 [[issues#60]] (最速传说) ::fixed:: 修复 [[issues#43]] ::info:: [[issues#43]] 提及的建议被采纳 可以通过以下自定义选项实现不再跳出本地提示：InPageEdit.myPreference = { &quot;doNotShowLocalWarn&quot;: false } ::info:: [[issues#53]] 中提到，红链也会出现“快速编辑”链接，使排版显得拥挤，这是 2.13.4 版本更新的功能 但是现在可以通过以下自定义选项移除红链后的“快速编辑”：InPageEdit.myPreference = { &quot;redLinkQuickEdit&quot;: false } 2.13.4-1 (2.13.4 patch 1) 更新日期：2020 年 5 月 21 日 00:22:36 ::info:: 技术层面 使代码结构更规范(徒增字节) ::fixed:: 修复了“显示一次后加载进度条便不会再显示”的故障 ::fixed:: 重新设计了快速编辑模块中编辑工具栏里的标题下拉菜单 使用&lt;ul&gt;以及&lt;li&gt;替代原先的&lt;select&gt;，配合 CSS，使其更加美观，避免不同浏览器中的样式不统一 部分系统(例如 iOS)中，调节&lt;select&gt;操作不便，此举顺便提高部分用户的使用体验 2.13.4 - Awesome Update 更新日期：2020 年 5 月 8 日 04:00:00 ::info:: 这是一次技术更新 整理了用户设置模块保存设置以及读取设置的逻辑 采用 Google 代码规范重新排版，不伤眼，孩子很喜欢 ::new:: 哦，天哪，是 FontAwesome™ 使用 FontAwesome 替代了 Material Icons ::fixed:: [[issues#26]] 这个存在了好几个大版本的 Bug 将被修复 ::fixed:: [[issues#16]] 采纳了这个建议 2.13.3 更新日期：2020 年 4 月 22 日 20:49:11 ::new:: Brand new InPageEdit Analysis 3.0™ 使用 MongoDB 非关系型数据库技术技术全新重制的 IPE 数据统计系统，震撼上新 *图形界面正在设计中 ::fixed:: 修复 [[issues#40]] ::fixed:: 重新修复 [[issues#26]] ::test:: 尝试解决 [[issues#39]] 的方案正在等待效果反馈 2.13.2 更新日期：- ::deleted:: 用英文写更新笔记太麻烦了，从该版本开始用中文记载更新笔记 ::info:: 这是一次技术更新 没有添加新功能 由于 NPM 打包不允许 4 位深度的版本号，因此我们更换了版本号，仅此而已 2.13.0.2 Release date: April 17, 2020 02:19 (CST) ::fixed:: Update About InPageEdit and Update Logs(AKA Version Info) modules. ::fixed:: Fixed [[issues#26]] 2.13.0.1(build_c052a80) Release date: - Security update ::deleted:: Hook dev.i18n modified to dfgh.i18n. Prevent contamination of Fandom devwiki variables. 2.13.0(build_2795) Far From Enough, Continue CupRelease date: 17:14, 9 April 2020 (CST) ::new:: Quick-Edit edit toolbar is available Designed similar to 2010 Wiki Editor You can add extra custom buttons. ::deleted:: MyInPageEditPreference variable no longer used. Please use InPageEdit.myPreference instead. 1234567891011121314/** Demo to replace old code **//* Old */window.MyInPageEditPreference = &#123; outSideClose: true, editMinor: false, editSummary: \"[InPageEdit] $section没有编辑摘要$oldid\",&#125;;/* New */window.InPageEdit = window.InPageEdit || &#123;&#125;; // Keep this lineInPageEdit.myPreference = &#123; outSideClose: true, editMinor: false, editSummary: \"[InPageEdit] $section没有编辑摘要$oldid\",&#125;; 2.12.0.4(build_2686) Release data: 00:11, 6 April 2020 (CST) ::fixed:: When you are editting page section, IPE can display the name of the section correctly and jump to the anchor point after saving. *_ Now \\$section placeholder in edit summary will replace with /_ Section title \\*/. Just like the original MW editor. (Finally!!!) ::fixed:: Fixed a logic issue. When you open another editor in the editor (eg. via Page detail links). Saving will no longer reload the page. ::fixed:: Fixed the logic of fetch editnotice. 2.12.0.3(build_2629) Release date: 02:48, 5 April 2020 (CST) ::fixed:: Fixed the logic to get the last edit timestamp of the page. Edit conflict issues should be encountered less often. ::fixed:: Fixed the logic of whether the editarea is modified. 2.12.0.2(build_2619) Release date: 01:16, 4 April 2020 (CST) ::fixed:: Fixed https://github.com/Dragon-Fish/InPageEdit-v2/issues/4 2.12.0.1(build_2610) Release date: 00:11, 4 April 2020 (CST) ::fixed:: Fixed https://github.com/Dragon-Fish/InPageEdit-v2/issues/5 ::fixed:: Fixed https://github.com/Dragon-Fish/InPageEdit-v2/issues/2#issuecomment-607441343 2.12.0(build_2575) - The Matryoshka Update Release date: 01:37, 2 April 2020 (CST) ::new:: New functions in quick edit editor: page details list! Show the list of templates and images on the page! You can easily edit the templates or view images via the list. 2.11.0(build_2545) - Just Hooks Update Release date: 18:15, 1 April 2020 (CST) ::new:: Quick Delete launched. ::fixed:: Rewrote the logic of move pages, delete pages, and redirect pages modules. In addition, it is now possible to add reasons for your action. ::new:: Technical update: Add module alias: InPageEdit.quickEdit, InPageEdit.quickRename, InPageEdit.quickRedirect, InPageEdit.quickDelete. ATTENTION: Old module name will be archive soon. Add mw.hook for InPageEdit. You can now write extended functions for IPE more easily. (eg. mw.hook(&#39;InPageEdit.quickEdit&#39;).add(myFunctions);) 2.10.0.1(build_2519) Release date: 12:03, 1 April 2020 (CST) ::fixed:: Minor bug fixed 2.10.0(build_2417) - The Structure Tech Update Release date: 22:12, 28 March 2020 (CST) It’s more like a technical update. No new functions. We updated the rendering mode of HTML to make it easier to maintain. We updated our method to get the version number. 2.9.1(build_2369) Release date: 00:53, 28 March 2020 (CST) ::fixed:: Add i18n cache mechanism. Improve loading speed. ::fixed:: Fixed styles for multiple components. eg. checkbox, header, icons 2.9.0.1(build_2319) - World Wild Friends Update Release date: 10:14, 26 March 2020 (CST) ::fixed:: Fixed i18n cross-domain reference failure. 2.9.0(build_2311) Release date: - ::new:: Now InPageEdit has i18n module. Translate it here: http://dev.fandom.com/wiki/MediaWiki:Custom-InPageEdit-v2/i18n.json 2.8.1(build_2236) Release date: 02:41, 21 March 2020 (CST) ::new:: Find and Replace!: It took me looooooooong time to write this function. So, hope you like it. 2.8.0.1(build_2213) Release date: 00:27, 18 March 2020 (CST) ::new:: InPageEdit advanced edittools coming soon. ::fixed:: User feedback that edit notice area takes up too much space. So it will be hide in the beginning. 2.8.0(build_2026) Release date: 21:45, 29 January 2020 (CST) ::fixed:: InPageEdit Analysis module will no longer trigger error codes ::fixed:: InPageEdit will now register global functions 2.7.1.1(build_1960) Release date: 20:21, 7 January 2020 (CST) ::fixed:: Fixed a bug that cause IPE not work 2.7.1(build_1948) - The Machine Release date: 18:01, 7 January 2020 (CST) ::new:: We add a new feature: The plugin adds features that may collect your information. The information that may be collected is: The wiki you edited, the number of times you saved using IPE, the number of times you used other features of IPE, and the date you used IPE We DO NOT collect any of your personal cookies and privacy information, and all information collected will be public ::fixed:: We changed InPageEdit-Analysis’s address to https://doc.wjghj.cn/InPageEditAnalysis/ 2.6.4(build_1897) Release date: 23:41, 4 January 2020 (CST) ::test:: We started testing a new feature: The plugin adds features that may collect your information. The information that may be collected is: The wiki you edited, the number of times you saved using IPE, the number of times you used other features of IPE, and the date you used IPE We DO NOT collect any of your personal cookies and privacy information, and all information collected will be public You can find all informations here: https://doc.wjghj.cn/InPageEditApi/ 2.6.3.5(build_1816) Release date: 15:29, 11 December 2019 (CST) ::fixed:: Fixed a bug where the newest version of MediaWiki Recentchanges auto-refresh feature overwrites ipe-quick-diff module 2.6.3.4(build_1767) Release date: 18:10, 8 December 2019 (CST) ::fixed:: Redesigned IPE-Toolbox ::deleted:: We no longer support InPageEdit-v2 compressed edition (https://common.wjghj.cn/js/InPageEdit-v2/min) 2.6.3.3(build_1709) Release date: 16:18, 5 December 2019 (CST) ::fixed:: Rewrite quick-edit module ::fixed:: Fixed a bug that cause magic words such like not work in quick-edit edit notice ::fixed:: Now, if you don’t have permission to edit the page, you will receive a notice message and can’t submit content ::fixed:: Adjusted the load order of CSS, it is more easier to override basic styles with your personal CSS now 2.6.3.2(build_1659) Release date: 05:00, 5 December 2019 (CST) ::fixed:: Minor bug fix 2.6.3.1(build_1536) Release date: 17:26, 2 December 2019 (CST) ::fixed:: Minor bug fixed: Now quick-diff modal will display at top when quick-edit from quick-diff module 2.6.3(build_1517) - Kimi no namai Release date: 17:20, 30 November 2019 (CST) ::new:: New function release: Rename page(Move)!!! Try it in your IPE toolbox~ ::fixed:: Fixed a bug that cause modal not close after quick redirect 2.6.2.3(build_1467) Release date: 14:03, 25 November 2019 (CST) ::fixed:: Now the button in quick diff module lead you to the right page 2.6.2.2(build_1459) Release date: 22:32, 24 November 2019 (CST) ::fixed:: Fixed a bug that cause in editor diff can’t work 2.6.2.1(build_1444) Release date: - ::deleted:: Merged “关于&amp;帮助” button from ipe-toolbox to ipe-preference module 2.6.2(build_1432) Release date: 21:33, 24 November 2019 (CST) ::new:: We complete quick diff module Now quick diff shows right info Now you can jump to next or prev version and quick view diff via quick diff module ::fixed:: We fixed the quick edit summary text Now \\$oldid will shows like &lt;nowiki&gt;(编辑自[[Special:Diff/oldid]])&lt;/nowiki&gt; ::fixed:: We fixed checkbox style Made inline width to 1px Hover style ** Transition *thanks to [https://minecraft-zh.gamepedia.com/User:Dianliang233 Dianliang233] :) ::new:: Now you can use compressed version via https://common.wjghj.cn/js/InPageEdit-v2/minDO NOT USE 2.6.1(build_1238) Release date: 14:35, 23 November 2019 (CST) ::new:: Script now run strict mode ::new:: We are now using new version number naming rule: V2 Main.Primary.Secondary(build\\_&#39;&#39;Code-revision-id&#39;&#39;) [https://common.wjghj.cn/s/C Canary edition] Main.Primary.Secondary(canary\\_&#39;&#39;Code-revision-id&#39;&#39;) 2.6.0(build_1196) Release date: 00:32, 23 November 2019 (CST) ::new:: We rewrote quick diff module Rename module InPageEdit.viewDiff() → InPageEdit.loadQuickDiff(CompareApiJson) Add module InPageEdit.quickDiff() ::new:: You can now quick view diff on history page! ::new:: We redesigned the quick edit editor More OOUI style (LOL) ::new:: You can now view difference between your code and old code when you are editting! 2.5.3(build_1094) Release date: - ::deleted:: We are no longer support skin setting. We are now using the new OOUI-like skin. You can customize the look of the IPE on your personal css page. ::fixed:: New OOUI style progress bar: TOGGLE(我可以玩一年) 2.5.2(build_944) Release date: - ::new:: We are now using the new OOUI-like skin! You can still load old Wikia-like designed skin via var InPageEditSkin = &#39;wds&#39;; 2.5.1(build_876) Release date: - ::fixed:: The page content is no longer overwritten when an editing conflict occurs 2.5.0(build_821) Release date: 19:59, 16 November 2019 (CST) ::new:: This is a big update, we replaced the ‘’cookie’’ function with ‘’localStorage’’ You can manually delete old cookies or wait for 60 days to expire automatically ::new:: You can turn off the function of clicking outside of edit window to close via setting 2.4.1(build_783) Release date: 16:03, 16 November 2019 (CST) ::fixed:: Fixed a bug that caused the display title in the preview as API ::fixed:: Fixed a bug that caused personal local settings(MyInPageEditPreference) not working 2.4.0(build_764) Release date: 01:55, 12 November 2019 (CST) ::fixed:: This is not important update for most of you, we use a new version number to remind you that we replaced some function names to make the module more holistic InPageEdit() → InPageEdit.edit() InPageEditRedirect() → InPageEdit.redirect() InPageEditDeletepage → InPageEdit.deletepage() InPageEditRename() → InPageEdit.renamepage() InPageEditPreference() → InPageEdit.preference() InPageEditViewDiff() → InPageEdit.viewDiff() InPageEditSectionLink() → InPageEdit.articleLink() 2.3.1(build_747) Release date: 00:16, 11 November 2019 (CST) ::new:: New function: Quick view page diff! Click diff links from ‘’Special:Recentchanges’’ or ‘’action=history’’, make a quick view of the diff log 2.3.0.2(build_616) Release date: 21:28, 6 November 2019 (CST) ::fixed:: This is not important update for most of you, we use a new version number to remind you that we have modified some css selectors Main editor window Add .ipe-editor .timestamp-&#39;&#39;&lt;timestamp&gt;&#39;&#39; #editPage → .editPage #editArea → .editArea #editSummary → .editSummary #editMinor → .editMinor Quick redirect window Add .quick-redirect Quick delete window Add → .quick-deletepage Quick rename window Add .quick-renamepage About &amp; Help window Add .in-page-edit 2.3.0.1(build_568) Release date: 12:52, 5 November 2019 (CST) ::fixed:: Simplify codes ::fixed:: Fixed a bug that cause in-article edit link save error 2.3.0(build_488) Release date: 23:03, 3 November 2019 (CST) ::new:: Now you can save your custom preferences by clicking the gear icon(settings) in the InPageEdit Toolbox! Save your prefer edit summary, who doesn’t like to be cool and maverick? Default set all edits as minor edit 2.2.2.1(build_460) Release date: 21:49, 2 November 2019 (CST) This is not a regular update, we use a new version number to remind you that we have replaced the license agreement *Some new functions coming soon (•‾̑⌣‾̑•)✧˖° 2.2.2(build_420) Release date: 20:45, 1 November 2019 (CST) ::new:: Quick redirect now released! Check the InPageEdit Toolbox on right bottom of the page! 2.2.1(build_382) Release date: 16:53, 1 November 2019 (CST) ::new:: The new design: InPageEdit Toolbox! Checking all ipe tools on right bottom of the page! [COMING_SOON] Quick redirect &amp; Quick rename page… 2.2.0(build_350) Release date: 02:10, 1 November 2019 (CST) ::new:: New design with [https://fandomdesignsystem.com Fandom Design System]! ::deleted:: No longer support load via URL param 2.1.2.1(build_336) Release date: - ::fixed:: Simplify json codes 2.1.2(build_330) Release date: 19:51, 25 October 2019 (CST) ::new:: Use the new way to get plugin version info 2.1.1(build_318) Release date: 20191025 ::new::::test:: Load via URL param↑ deleted, see [[#2.2.0(build_350)|Ver.2.2.350]] 2.1.0.1(build_306) Release date: 20191025 ::fixed:: Replace syntax with mw resource loader 2.1.0(build_298) Release date: 20191019 ::new:: Now support edit history ::fixed:: Posting error will show you the error code 2.0.10(build_279) Release date: 20191018 ::new:: Now support minor edit 2.0.9 Release date: unknown ::new:: Now support multi skins 2.0.8 Release date: unknown ::new:: Now support preview 2.0.7 Release date: unknown ::fixed:: Multi bugs fixed, content can be published now 2.0.0 Release date: unknown ::new:: Alpha release, rewrite InPageEdit via ssi modal plugin Earlier version InPageEdit 1.0 no longer updated InPageEdit-v2 is a JavaScript-based MediaWiki plug-in, written by 机智的小鱼君/Dragon Fish. © Original by Wjghj Project, GNU General Public License 3.0 (2019 - )See more: GitHub | About plug-in | Version info !(function(){ var date = new Date(), year = date.getFullYear(); $('#year').text(year); }());"}],"posts":[{"title":"搜狐畅言评论测试","slug":"changyan-test","date":"2020-07-07T05:21:03.000Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"2020/07/07/changyan-test/","link":"","permalink":"https://dragon-fish.github.io/2020/07/07/changyan-test/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"网页设计","slug":"技术/网页设计","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"日常日记","slug":"日常日记","permalink":"https://dragon-fish.github.io/tags/%E6%97%A5%E5%B8%B8%E6%97%A5%E8%AE%B0/"}]},{"title":"优雷卡奶妈文理技能搭配","slug":"ff14-ulk-logogram-for-healer","date":"2020-06-24T17:24:41.000Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"2020/06/24/ff14-ulk-logogram-for-healer/","link":"","permalink":"https://dragon-fish.github.io/2020/06/24/ff14-ulk-logogram-for-healer/","excerpt":"","text":"本博客更新于国服 5.18 版本 最终幻想 14「禁地优雷卡·巴尔德西昂兵武塔」治疗职业文理技能搭配 一般的，攻略巴尔德西昂兵武塔（以下简称BA）的小队中有两名奶妈，根据负责的 buff 划分为“勇气奶”以及“醒神奶”。 顾名思义，一个主要负责技能文理勇气，提高队友的攻击力；另一个主要负责技能文理醒神，为队友提供超快的魔素板恢复力。 常驻英杰的加护 文理技能 合成配方 技能概要 英杰的加护 英杰的加护 术士的记忆 + 斗士的记忆 + 重骑兵的记忆 术士 + 斗士 + 重骑兵 增加血量，死亡有概率复活 两名奶妈都要单独合成一个英杰的加护，并在进入BA时砸掉然后使用。不推荐在进入BA前使用，因为在打前置任务“不明飞行物”的时候可能会暴毙并触发/失去英杰的 buff（血妈亏） 然后再按照自己的分工合成以下组合： 勇气奶 文理技能 合成配方 技能概要 圣骑士的记忆 圣骑士的记忆 重骑兵的记忆 + 文理治疗 + 文理石肤 重骑兵 + 治疗 + 石肤 增加血量，提高治疗量 文理勇气 文理勇气 守护者的记忆 + 祭司的记忆 + 武人的记忆 守护者 + 祭司 + 武人 单buff，提高目标的攻击力，每隔5分钟为全员轮流上一次 醒神奶 文理技能 合成配方 技能概要 圣骑士的记忆 圣骑士的记忆 重骑兵的记忆 + 文理治疗 + 文理石肤 重骑兵 + 治疗 + 石肤 增加血量，提高治疗量 文理醒神 文理醒神 术士的记忆 + 祭司的记忆 + 文理救疗 术士 + 祭司 + 救疗 群buff，提高附近队友魔素板的恢复力，合成比文理勇气省钱 额外技能除此之外，如果文理技能栏够多的话，也可以携带以下技能。 文理技能 合成配方 技能概要 文理充能 文理充能 术士的记忆 + 斗士的记忆 + 文理治疗 术士 + 斗士 + 治疗 对自身buff，提高回蓝和治疗量一般在最后的奥兹玛房间使用 文理献祭 文理献祭 文理魔法爆发 + 文理康复 + 文理复活 魔爆 + 康复 + 复活 该技能可以在BA内复活队友！但是会对自身附加死亡宣告，配合英杰的加护赌运气使用一般由多名奶妈一个接一个套娃使用直到死亡者和施救者都存活，由于贵的一逼加非酋附体成本高的离谱，所以一般会要求被救者付出一定的报酬","categories":[{"name":"游戏","slug":"游戏","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/"},{"name":"最终幻想14","slug":"游戏/最终幻想14","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/"},{"name":"副本","slug":"游戏/最终幻想14/副本","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/%E5%89%AF%E6%9C%AC/"},{"name":"禁地优雷卡","slug":"游戏/最终幻想14/副本/禁地优雷卡","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/%E5%89%AF%E6%9C%AC/%E7%A6%81%E5%9C%B0%E4%BC%98%E9%9B%B7%E5%8D%A1/"}],"tags":[{"name":"日常日记","slug":"日常日记","permalink":"https://dragon-fish.github.io/tags/%E6%97%A5%E5%B8%B8%E6%97%A5%E8%AE%B0/"},{"name":"最终幻想14","slug":"最终幻想14","permalink":"https://dragon-fish.github.io/tags/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/"}]},{"title":"已更新评论插件","slug":"comment-update","date":"2020-06-02T21:01:07.000Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"2020/06/02/comment-update/","link":"","permalink":"https://dragon-fish.github.io/2020/06/02/comment-update/","excerpt":"","text":"小破站从现在开始使用全新的utteranc插件作为评论插件，它基于 GitHub issues 系统，使用 GitHub 原版的主题样式，并且使用 GitHub App 自动创建 issues，感觉非常的酷。 使用你的 GitHub 账号登录，留下评论试试吧~ 附：主题模板源代码12345678910&lt;% if (theme.utteranc)&#123; %&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;utteranc.es&#x2F;client.js&quot; repo&#x3D;&quot;&lt;%&#x3D; theme.utteranc.owner %&gt;&#x2F;&lt;%&#x3D; theme.utteranc.repo %&gt;&quot; issue-term&#x3D;&quot;&lt;% if (theme.utteranc.term) &#123; %&gt;&lt;%&#x3D; theme.utteranc.term %&gt;&lt;% &#125; else &#123; %&gt;pathname&lt;% &#125; %&gt;&quot; label&#x3D;&quot;&lt;% if (theme.utteranc.label) &#123; %&gt;&lt;%&#x3D; theme.utteranc.label %&gt;&lt;% &#125; else &#123; %&gt;_utteranc&lt;% &#125; %&gt;&quot; theme&#x3D;&quot;&lt;% if (theme.utteranc.theme) &#123; %&gt;&lt;%&#x3D; theme.utteranc.theme %&gt;&lt;% &#125; else &#123; %&gt;github-light&lt;% &#125; %&gt;&quot; crossorigin&#x3D;&quot;anonymous&quot; async&gt;&lt;&#x2F;script&gt;&lt;% &#125; %&gt;","categories":[{"name":"技术","slug":"技术","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"网页设计","slug":"技术/网页设计","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"日常日记","slug":"日常日记","permalink":"https://dragon-fish.github.io/tags/%E6%97%A5%E5%B8%B8%E6%97%A5%E8%AE%B0/"}]},{"title":"测试信息框","slug":"infobox-test","date":"2020-05-26T20:32:51.000Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"2020/05/26/infobox-test/","link":"","permalink":"https://dragon-fish.github.io/2020/05/26/infobox-test/","excerpt":"","text":"测试信息框的样式。^1 提示 这是一则提示信息 换行显示 成功 这是一则提示信息 警告 这是一则提示信息 错误 这是一则提示信息","categories":[{"name":"技术","slug":"技术","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"网页设计","slug":"技术/网页设计","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://dragon-fish.github.io/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"MediaWiki Indigo 皮肤","slug":"mwskin-indigo","date":"2020-05-26T11:07:17.000Z","updated":"2020-08-06T23:04:59.692Z","comments":true,"path":"2020/05/26/mwskin-indigo/","link":"","permalink":"https://dragon-fish.github.io/2020/05/26/mwskin-indigo/","excerpt":"最近尝试开发一款 MediaWiki 皮肤，灵感来自我的这个 Hexo 博客的 indigo 皮肤，非常符合 Google Material Design。 这款皮肤的名字为了致敬 Hexo Indigo 皮肤的作者，于是决定把名字也命名为 Indigo。","text":"最近尝试开发一款 MediaWiki 皮肤，灵感来自我的这个 Hexo 博客的 indigo 皮肤，非常符合 Google Material Design。 这款皮肤的名字为了致敬 Hexo Indigo 皮肤的作者，于是决定把名字也命名为 Indigo。 预览 采用 Material Design，湛蓝色也是相当好看。 目前还没有做移动设备优化……基本只有一个框架。 自定义另外，由于皮肤样式使用less编写，只需要改几个变量就可以轻松自定义，比如像这样： Indigo 皮肤 × Pink 皮肤 √","categories":[{"name":"技术","slug":"技术","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"网页设计","slug":"技术/网页设计","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"},{"name":"MediaWiki","slug":"技术/网页设计/MediaWiki","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/MediaWiki/"}],"tags":[{"name":"日常日记","slug":"日常日记","permalink":"https://dragon-fish.github.io/tags/%E6%97%A5%E5%B8%B8%E6%97%A5%E8%AE%B0/"},{"name":"MediaWiki","slug":"MediaWiki","permalink":"https://dragon-fish.github.io/tags/MediaWiki/"}]},{"title":"FF14喜当狗托","slug":"ff14-liwuhe","date":"2020-05-26T10:35:09.000Z","updated":"2020-08-06T23:04:59.680Z","comments":true,"path":"2020/05/26/ff14-liwuhe/","link":"","permalink":"https://dragon-fish.github.io/2020/05/26/ff14-liwuhe/","excerpt":"前言FF14 里，有一个道具叫礼物盒，一般是官方做活动的时候送的，打开的时候会从列表里随机获得一种道具，一般开出来的都是魔晶石这种便宜货，但也有极小的概率得到价值 70RMB 的幻想药这种高级道具。 喜当狗托我一直以为礼物盒开出幻想药是假的，直到今天……","text":"前言FF14 里，有一个道具叫礼物盒，一般是官方做活动的时候送的，打开的时候会从列表里随机获得一种道具，一般开出来的都是魔晶石这种便宜货，但也有极小的概率得到价值 70RMB 的幻想药这种高级道具。 喜当狗托我一直以为礼物盒开出幻想药是假的，直到今天…… 不仅开出了价值 70RMB 的幻想药…… 之后又立马开出了价值 70RMB 的雇员冒险录…… 这……真的假的？？？ 开盒记录 完全懵逼 我：？？？ 当时我就愣住了，还以为自己在做梦。 装逼遭雷劈当我醒悟过来以后，赶紧截图找列表炫耀。然后…… 被群友柠檬 危 小鱼君 危","categories":[{"name":"游戏","slug":"游戏","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/"},{"name":"最终幻想14","slug":"游戏/最终幻想14","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/"}],"tags":[{"name":"日常日记","slug":"日常日记","permalink":"https://dragon-fish.github.io/tags/%E6%97%A5%E5%B8%B8%E6%97%A5%E8%AE%B0/"},{"name":"最终幻想14","slug":"最终幻想14","permalink":"https://dragon-fish.github.io/tags/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/"}]},{"title":"如何使用 GitHub Pages + Hexo 白嫖一个个人网站","slug":"how-to-build-a-hexo","date":"2020-04-27T04:34:52.000Z","updated":"2020-08-06T23:04:59.680Z","comments":true,"path":"2020/04/27/how-to-build-a-hexo/","link":"","permalink":"https://dragon-fish.github.io/2020/04/27/how-to-build-a-hexo/","excerpt":"Hexo 官方文档：https://hexo.io/zh-cn/docs/ (有简体中文哟) 1.注册 GitHub 账号https://github.com/ 2.新建一个 Repo，名字如下&lt;你的用户名&gt;.github.io","text":"Hexo 官方文档：https://hexo.io/zh-cn/docs/ (有简体中文哟) 1.注册 GitHub 账号https://github.com/ 2.新建一个 Repo，名字如下&lt;你的用户名&gt;.github.io 3.在你的电脑上下载 Node.js 以及 Git如果你下载太慢了，可以用马云爸爸的镜像： https://npm.taobao.org/mirrors/node https://npm.taobao.org/mirrors/git-for-windows/ 4.在你的电脑上新建文件夹(不用命令行也行)mkdir &lt;文件夹名字&gt; 5.安装 hexo 及其依赖 如果报错 npm 不是内部命令，自行百度原因！！！ 在任意位置输入 123npm install -g hexonpm install -g hexo-servernpm install -g hexo-deploy-git 它会自己下载需要的文件 6.初始化 hexo 怎么在命令行里切换文件夹自行百度！！！ 进入你准备放置博客的文件夹输入：hexo init 它会自己下载需要的文件 7.写博客文件夹source内的文件就是你的博文，采用Markdown 语法，Markdown 是什么自行百度！！！ 其他设置请看官方文档 ↑ 8.预览博客输入：hexo server 打开浏览器访问 http://localhost:4000 可以预览你的博客 9.发布到 GitHub修改./_config.yml最底下的内容 1234deploy: type: git repo: git@github.com:&lt;你的用户名&gt;/&lt;你的用户名&gt;.github.io.git branch: master 然后依次输入 12hexo generatehexo deploy 按提示输入你的 GitHub 用户名和邮件地址以及密码。 10.大功告成访问 https://&lt;你的用户名&gt;.github.io 想让自己的博客变得更好看，请看官方文档 ↑ 作者的话包教不包会，因为我也不懂编程，都是跟着文档来的，遇到问题请复制粘贴错误代码，然后扔进百度，如果不喜欢百度，也可以用必应或者搜狗。","categories":[{"name":"技术","slug":"技术","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"网页设计","slug":"技术/网页设计","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"},{"name":"Hexo","slug":"技术/网页设计/Hexo","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/Hexo/"}],"tags":[{"name":"日常日记","slug":"日常日记","permalink":"https://dragon-fish.github.io/tags/%E6%97%A5%E5%B8%B8%E6%97%A5%E8%AE%B0/"}]},{"title":"使用 GitHub Actions 更新博客","slug":"update-via-github-actions","date":"2020-04-25T15:22:31.000Z","updated":"2020-08-06T23:04:59.680Z","comments":true,"path":"2020/04/25/update-via-github-actions/","link":"","permalink":"https://dragon-fish.github.io/2020/04/25/update-via-github-actions/","excerpt":"使用 GitHub Actions + Hexo + GitHub Pages ，白嫖 GitHub 的服务器资源建立可以自己更新的个人博客。 连命令行都可以不用敲了，嘻嘻。 前提电脑已经安装Node.js以及Git，知道什么是GitHub，用过Hexo。 1. 建立一个私人 Repo 用于保存源码这个 Repo 下面简称源代码 Repo 例如：https://github.com/Dragon-Fish/ghpages","text":"使用 GitHub Actions + Hexo + GitHub Pages ，白嫖 GitHub 的服务器资源建立可以自己更新的个人博客。 连命令行都可以不用敲了，嘻嘻。 前提电脑已经安装Node.js以及Git，知道什么是GitHub，用过Hexo。 1. 建立一个私人 Repo 用于保存源码这个 Repo 下面简称源代码 Repo 例如：https://github.com/Dragon-Fish/ghpages 2. 建立一个名字叫 &lt;用户名&gt;.github.io 的 Repo这个 Repo 下面简称网站 Repo 例如：https://github.com/Dragon-Fish/dragon-fish.github.io 3. 创建 ssh 连接密钥，并上传 GitHub 在自己的电脑上用命令行敲：ssh-keygen -t rsa -C &quot;&lt;你的邮件地址&gt;&quot; 一路回车，直到系统提示生成完毕 找到生成的两个文件id_rsa以及id_rsa.pub id_rsa.pub是公钥，点击自己的头像 → 设置 → ssh → 添加，把 id_rsa.pub 里的东西复制粘贴保存 id_rsa是私钥，需要保存到源代码 Repo 里，进入 Repo → 设置 → secrets → 添加 → 把 id_rsa 复制粘贴上去保存，我这里保存时设置的 title 叫HEXO_DEPLOY_PRIVATE_KEY，可以换成任意你觉得好听的名字，但是下面会用到，所以不要设置一些花里胡哨的名字，以免气死自己。 4. 设置工作流进入源代码 Repo → Actions → 新建 以下是我设置的工作流，借鉴了来自互联网的一些资料，仅供参考 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354# 工作流名称name: 自动部署GitHub Pages# 当 master 分支的内容变更，自动开始on: push: branches: - masterjobs: build: # 使用最新版ubantu虚拟机运行 runs-on: ubuntu-latest steps: # from: https://github.com/actions/checkout - name: 本工作流 uses: actions/checkout@master # 安装最新版 Node.js # from: https://github.com/actions/setup-node - name: 安装Node.js 10.x uses: actions/setup-node@master with: node-version: \"10.x\" - name: 安装Hexo及其依赖 run: | npm install hexo-cli -g npm install - name: 设置ssh密钥 env: HEXO_DEPLOY_PRIVATE_KEY: $&#123;&#123; secrets.HEXO_DEPLOY_PRIVATE_KEY &#125;&#125; run: | mkdir -p ~/.ssh/ echo \"$HEXO_DEPLOY_PRIVATE_KEY\" &gt; ~/.ssh/id_rsa chmod 600 ~/.ssh/id_rsa ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts - name: 配置Git run: | git config --global user.name '&lt;GitHub用户名&gt;' git config --global user.email '&lt;GitHub邮件地址&gt;' git config core.quotepath false - name: 使用Hexo生成静态文件 run: | hexo clean hexo generate - name: 推送到GitHub Pages run: | hexo deploy 5. 基本就完成了对源代码 Repo 的 master 分支做出的任何修改都会触发上面的工作流，自动构建 hexo 网页并推送到网站 Repo 作者的话白嫖真爽，全自动白嫖，嘻嘻","categories":[{"name":"技术","slug":"技术","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"网页设计","slug":"技术/网页设计","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"},{"name":"Hexo","slug":"技术/网页设计/Hexo","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/Hexo/"}],"tags":[{"name":"站点维护","slug":"站点维护","permalink":"https://dragon-fish.github.io/tags/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/"}]},{"title":"站点导航","slug":"navigation","date":"2020-04-20T06:23:44.000Z","updated":"2020-08-06T23:04:59.680Z","comments":true,"path":"2020/04/20/navigation/","link":"","permalink":"https://dragon-fish.github.io/2020/04/20/navigation/","excerpt":"","text":"本页面用于记录无法被常规归档索引的独立页面，查找文章请到归档。 InPageEdit插件 InPageEdit-v2 InPageEdit Analysis InPageEdit Update Logs","categories":[],"tags":[{"name":"站点导航","slug":"站点导航","permalink":"https://dragon-fish.github.io/tags/%E7%AB%99%E7%82%B9%E5%AF%BC%E8%88%AA/"}]},{"title":"如何更新博客内容","slug":"how-to-update-blog","date":"2020-04-18T19:55:27.000Z","updated":"2020-08-06T23:04:59.680Z","comments":true,"path":"2020/04/18/how-to-update-blog/","link":"","permalink":"https://dragon-fish.github.io/2020/04/18/how-to-update-blog/","excerpt":"本文主要是小鱼君写给自己的技术备份 使用软件Visual Studio Code ← 太好用了 前置条件这里假设一直以来的电脑被连锅端了，如何重新获取博客的控制权 电脑安装了Node.js以及git 用npm install -g hexo安装hexo 找到保存博客构筑文件的文件夹，放到Onedrive里不论换几次电脑都不怕失踪，理论上依赖项目应该保留在./node_modules里 新建文章 从vscode打开文件夹，进入命令行 hexo new post 路径 建议用英文，毕竟标题可以改 写就完事了","text":"本文主要是小鱼君写给自己的技术备份 使用软件Visual Studio Code ← 太好用了 前置条件这里假设一直以来的电脑被连锅端了，如何重新获取博客的控制权 电脑安装了Node.js以及git 用npm install -g hexo安装hexo 找到保存博客构筑文件的文件夹，放到Onedrive里不论换几次电脑都不怕失踪，理论上依赖项目应该保留在./node_modules里 新建文章 从vscode打开文件夹，进入命令行 hexo new post 路径 建议用英文，毕竟标题可以改 写就完事了 预览网站 hexo server 提示已运行：预设地址为 http://localhost:4000 提示失败：百度一下 (就很真实) 发布更新 hexo cl 清空旧的文件以防各种鬼畜的Bug hexo generate 生成新的文件 hexo deploy 使用预设的Git将文件Pull到GitHub 这一步可能会提示用户认证失败，用账号密码登录GitHub就行了","categories":[{"name":"技术","slug":"技术","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"网页设计","slug":"技术/网页设计","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"},{"name":"Hexo","slug":"技术/网页设计/Hexo","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/Hexo/"}],"tags":[{"name":"站点维护","slug":"站点维护","permalink":"https://dragon-fish.github.io/tags/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-04-18T19:32:16.000Z","updated":"2020-08-06T23:04:59.680Z","comments":true,"path":"2020/04/18/hello-world/","link":"","permalink":"https://dragon-fish.github.io/2020/04/18/hello-world/","excerpt":"","text":"有句老话怎么讲来着？哦对我想起来了：“你好，世界！” 2020年4月20日，机智的小鱼君为了方便维护及风格统一而实施了Wjghj Document Center 2.0统合计划，因此文章《你好世界》也被统一为了一篇。这部分写给dragon-fish.github.io的访客 “也该好好研究一下如何利用GitHub Pages了，白嫖它不香吗？” 缘起如果你是稍微懂一些Web Develop知识以及经常使用GitHub你也已经发现了，这个博客是利用蹭GitHub资源，使用著名静态博客生成器Hexo生成的。 你也许知道，我其实有一个基于WordPress的博客网站 https://blog.wjghj.cn 也就是说建立这个网站似乎完全是冗余的。比起使用PHP构建的动态网站，hexo每次更新都要使用命令行去hexo clear或者hexo generate，最后再hexo deploy，显得十分麻烦，我为什么要在GitHub Pages上建立一个这样的博客呢？ 原因很简单，那就是——帅啊！！！ 试问哪个玩Web前端的男孩不想坐在Shell前敲着旁人压根看不明白的命令行？ 抱着试一试的想法，带着“这样做真是酷毙了”的心情，本博客就此诞生了。 挫折构建这个网站最初遇到的最大挫折就是，我特么把git玩坏了，导致deploy到repo的文件居然是构筑文件而不是public本体，邮箱都被GitHub的错误警告挤爆了，实在是让人感到很淦。 最后被办法，也搞不太明白git，所以就采取了土方法，直接删文件夹重建了一个，终于是很成功的发布了网站。 想说的话我头发快没了。 2020年4月20日，机智的小鱼君为了方便维护及风格统一而实施了Wjghj Document Center 2.0统合计划，因此文章《你好世界》也被统一为了一篇。这部分写给doc.wjghj.cn的访客 “众里寻它千百度，终于给我找到了Hexo这款静态网站生成器。” 缘起本来Hexo是一款基于Node.js的静态博客生成器，但是出乎意料的用来作为资料整合站效果也是相当不错，因为你可以把大部分精力集中在讲述和记录这件事本身上，而不是去研究让人头秃的HTML代码。 我正好被自己VPS上令人头秃的文件结构而烦恼，于是一不做二不休，“就这么决定吧，该特么重置了。”，抱着这样的想法，Wjghj Document Center 2.0涅槃了。 历史其实严格来讲这次重置是文档中心第三代。 第一代是真·纯静态，我还能在自己的QQ空间相册找到当年文档中心的截图。用一个词概括那就是“简陋”，说通俗点就是“Low”。基本除了什么html body head以外就啥都莫得了。 第二代是伪·动态，虽然采用的是PHP构架，但其实没有运用到数据库这种高超的技术，只是有了一种“模板化”的概念，这一代使用了Materialize框架，可以说至少没那么丑了。 第三代也就是现在的模样。老实讲，还算是挺好看的，是吧？ 想说的话没有。因为头发掉光了。","categories":[],"tags":[{"name":"日常日记","slug":"日常日记","permalink":"https://dragon-fish.github.io/tags/%E6%97%A5%E5%B8%B8%E6%97%A5%E8%AE%B0/"}]}],"categories":[{"name":"技术","slug":"技术","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"网页设计","slug":"技术/网页设计","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"},{"name":"游戏","slug":"游戏","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/"},{"name":"最终幻想14","slug":"游戏/最终幻想14","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/"},{"name":"副本","slug":"游戏/最终幻想14/副本","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/%E5%89%AF%E6%9C%AC/"},{"name":"禁地优雷卡","slug":"游戏/最终幻想14/副本/禁地优雷卡","permalink":"https://dragon-fish.github.io/categories/%E6%B8%B8%E6%88%8F/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/%E5%89%AF%E6%9C%AC/%E7%A6%81%E5%9C%B0%E4%BC%98%E9%9B%B7%E5%8D%A1/"},{"name":"MediaWiki","slug":"技术/网页设计/MediaWiki","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/MediaWiki/"},{"name":"Hexo","slug":"技术/网页设计/Hexo","permalink":"https://dragon-fish.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/Hexo/"}],"tags":[{"name":"日常日记","slug":"日常日记","permalink":"https://dragon-fish.github.io/tags/%E6%97%A5%E5%B8%B8%E6%97%A5%E8%AE%B0/"},{"name":"最终幻想14","slug":"最终幻想14","permalink":"https://dragon-fish.github.io/tags/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B314/"},{"name":"测试","slug":"测试","permalink":"https://dragon-fish.github.io/tags/%E6%B5%8B%E8%AF%95/"},{"name":"MediaWiki","slug":"MediaWiki","permalink":"https://dragon-fish.github.io/tags/MediaWiki/"},{"name":"站点维护","slug":"站点维护","permalink":"https://dragon-fish.github.io/tags/%E7%AB%99%E7%82%B9%E7%BB%B4%E6%8A%A4/"},{"name":"站点导航","slug":"站点导航","permalink":"https://dragon-fish.github.io/tags/%E7%AB%99%E7%82%B9%E5%AF%BC%E8%88%AA/"}]}